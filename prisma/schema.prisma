// prisma/schema.prisma
// This is your Prisma schema file  
generator client {   
  provider = "prisma-client-js" 
}  

datasource db {   
  provider = "sqlite"   
  url      = env("DATABASE_URL") 
}  

// Update your existing User model with the NextAuth fields
model User {   
  id             String           @id @default(cuid())   
  name           String?   
  email          String           @unique   
  // Add these fields for NextAuth
  emailVerified  DateTime?
  password       String?
  image          String?
  accounts       Account[]
  sessions       Session[]
  // Keep your existing relations
  favorites      FavoriteRecipe[]   
  createdRecipes Recipe[] 
}  

model Recipe {   
  id                String           @id @default(cuid())   
  externalId        Int?             // For Spoonacular API recipes   
  title             String   
  description       String?   
  imageUrl          String?   
  prepTime          Int              // In minutes   
  cookTime          Int              // In minutes   
  servings          Int              @default(2)   
  ingredients       Ingredient[]   
  instructions      Instruction[]   
  difficulty        String           @default("Medium") // Easy, Medium, Hard   
  cuisineType       String?   
  createdAt         DateTime         @default(now())   
  updatedAt         DateTime         @updatedAt   
  author            User?            @relation(fields: [authorId], references: [id])   
  authorId          String?   
  favoriteCount     Int              @default(0)   
  favoriteRelations FavoriteRecipe[] 
}  

model Ingredient {   
  id       String  @id @default(cuid())   
  name     String   
  amount   Float   
  unit     String?   
  recipe   Recipe  @relation(fields: [recipeId], references: [id], onDelete: Cascade)   
  recipeId String 
}  

model Instruction {   
  id       String @id @default(cuid())   
  stepNo   Int   
  text     String   
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)   
  recipeId String 
}  

model FavoriteRecipe {   
  id        String   @id @default(cuid())   
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)   
  userId    String   
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)   
  recipeId  String   
  createdAt DateTime @default(now())    
  
  @@unique([userId, recipeId]) 
}

// Add these models for NextAuth (modified for SQLite)
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}